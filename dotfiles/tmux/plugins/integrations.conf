# Integrations Configuration
# Development tool integrations for enhanced workflow

# =============================================================================
# FZF INTEGRATION
# =============================================================================

# FZF session switcher
bind f run-shell "tmux neww tmux kill-session -t \"\$(tmux list-sessions -F \#{session_name}\" | fzf --reverse)\"'"

# FZF window switcher
bind w run-shell "tmux select-window -t \$(tmux list-windows -F \#{window_name} | fzf --reverse)\"'

# FZF pane switcher
bind o run-shelltmux select-pane -t \$(tmux list-panes -F \#{pane_index} | fzf --reverse)\"'
# FZF file finder
bind F run-shelltmux neww -n fzffzf --preview \"bat --style=numbers --color=always --line-range :500[object Object]}\" --bind ctrl-v:execute(nvim [object Object]t'"

# FZF history search
bind H run-shell "tmux neww -n historyfzf --tac --no-sort --reverse --tiebreak=index --bind ctrl-r:toggle-sort'"

# =============================================================================
# LAZYGIT INTEGRATION
# =============================================================================

# LazyGit in new window
bind g new-window -n lazygit lazygit

# LazyGit in new pane
bind G split-window -h lazygit

# LazyGit in current directory
bind <C-g> new-window -c "#{pane_current_path}" -n lazygit lazygit

# =============================================================================
# NEOVIM INTEGRATION
# =============================================================================

# Neovim in new window
bind n new-window -n nvim nvim

# Neovim in new pane
bind N split-window -h nvim

# Neovim in current directory
bind <C-n> new-window -c "#{pane_current_path}" -n nvim nvim

# Neovim with file picker
bind <C-f> run-shell tmux neww -n nvimnvim -c \"Telescope find_files\"'"

# =============================================================================
# GIT INTEGRATION
# =============================================================================

# Git status in new window
bind s new-window -n git-status 'git status'

# Git log in new window
bind l new-window -n git-log git log --oneline --graph --all'

# Git diff in new window
bind d new-window -n git-diffgit diff'

# Git branch switcher
bind b run-shelltmux neww -n git-branchgit branch | fzf --reverse | xargs git checkout'"

# =============================================================================
# FILE MANAGER INTEGRATION
# =============================================================================

# Ranger file manager
bind r new-window -n ranger ranger

# Nnn file manager
bind R new-window -n nnn nnn

# =============================================================================
# TERMINAL INTEGRATION
# =============================================================================

# New terminal window
bind t new-window

# New terminal pane
bind T split-window

# Toggle terminal
bind <C-t> new-window -n terminal

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================

# Docker integration
bind D new-window -n docker 'docker ps'

# Kubernetes integration
bind K new-window -n kubectlkubectl get pods

# Node.js REPL
bind <C-j> new-window -n node node

# Python REPL
bind <C-p> new-window -n python python3

# =============================================================================
# SYSTEM TOOLS
# =============================================================================

# System monitor
bind m new-window -n htop htop

# Disk usage
bind u new-window -n diskncdu
# Network monitor
bind <C-m> new-window -n network iftop
# Process monitor
bind P new-window -n processesps aux | fzf'

# =============================================================================
# CUSTOM INTEGRATIONS
# =============================================================================

# Quick access to config files
bind c new-window -c ~/.config -n config nvim

# Quick access to projects
bind p new-window -c ~/Projects -n projects

# Quick access to downloads
bind <C-d> new-window -c ~/Downloads -n downloads

# =============================================================================
# INTEGRATION HELP
# =============================================================================

# Show integration help
bind I display-message Integrations: f=FZF, g=LazyGit, n=Neovim, t=Terminal, m=Monitor, c=Config, p=Projects"

# =============================================================================
# INTEGRATION SETTINGS
# =============================================================================

# Set default working directory for new windows
set -g default-command cd #[object Object]pane_current_path}"

# Enable automatic window renaming
setw -g automatic-rename on
setw -g automatic-rename-format#{b:pane_current_path}"

# =============================================================================
# INTEGRATION PERFORMANCE
# =============================================================================

# Reduce integration overhead
set -g status-interval 5

# =============================================================================
# INTEGRATION CUSTOMIZATION
# =============================================================================

# Custom integration commands
bind <C-r> run-shell "tmux neww -n custom 'echo \"Custom integration\'# Integration with external scripts
bind <C-s> run-shell "tmux neww -n script~/scripts/custom.sh'"

# =============================================================================
# INTEGRATION ADVANCED
# =============================================================================

# Advanced FZF integration
bind <C-a> run-shell "tmux neww -n advanced-fzffzf --preview \"bat --style=numbers --color=always --line-range :500[object Object]}\" --bind ctrl-v:execute(nvim[object Object]ort,ctrl-g:execute(lazygit)+abort"

# Advanced Git integration
bind <C-g> run-shell tmux neww -n git-advancedgitstatus --porcelain | fzf --reverse | awk \{print \\\$2 | xargs nvim'
# Advanced Neovim integration
bind <C-n> run-shell tmux neww -n nvim-advancednvim -c \"Telescope find_files\" -c \"Telescope live_grep\"'" 